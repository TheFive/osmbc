extends layout


mixin leftcolumn
  if (params.right_lang =="--")
    .col-md-10
      if block
        block
      else
        p No Content provided
  else
    .col-md-5
      if block
        block
      else
        p No Content provided

mixin rightcolumn
  if (params.right_lang !="--")
    .col-md-5.hidden-xs
      if block
        block
      else
        p No Content provided
  else
    .col-md-5.hidden
      if block
        block
      else
        p No Content provided




block content
  p
    if article.lock && (article.lock.user != layout.user.displayName)
      .alert.alert-dismissable.alert-danger
        button.close( type="button", data-dismiss="alert" ) ×
        |#{article.lock.user} edits since #{layout.moment(article.lock.timestamp).fromNow()} Version #{article.version}
    if info
      if info.message
        if info.status == 'error'
          .alert.alert-dismissable.alert-danger
            button.close( type="button", data-dismiss="alert" ) ×
            |#{info.message}
        if info.status == 'message'
          .alert.alert-dismissable.alert-success
            button.close( type="button", data-dismiss="alert" ) ×
            |#{info.message}
  


          
    if (params.edit && !( blog && blog.status=="closed") )
      form(name="input",id="input", action="#{layout.htmlroot}/article/#{article.id}", method="post")
        .row
          .col-md-1
            |Blog <br>
          .col-md-5
            select(id="blog",name="blog").form-control
              option(value="Future") Future
              if (layout.listOfOpenBlog)  
                - var displayed = false;
                for blog in layout.listOfOpenBlog 
                  if blog.name == article.blog         
                    option(value="#{blog.name}" selected) #{blog.name}
                    - displayed = true;
                  else
                     option(value="#{blog.name}" ) #{blog.name}
              if (layout.listOfEditBlog)  
                for blog in layout.listOfEditBlog 
                  if blog.name == article.blog         
                    option(value="#{blog.name}" selected) #{blog.name} (Edit)
                    - displayed = true;
                  else
                     option(value="#{blog.name}" ) #{blog.name} (Edit)
              if (layout.listOfReviewBlog)  
                for blog in layout.listOfReviewBlog 
                  if blog.name == article.blog         
                    option(value="#{blog.name}" selected) #{blog.name} (Review #{layout.language})
                    - displayed = true;
                  else
                     option(value="#{blog.name}" ) #{blog.name} (Review #{layout.language})
              if (article.blog == "Trash")
                option(value="Trash" selected) Trash
                - displayed = true;
              else
                option(value="Trash" ) Trash
              if (layout.listOfHelpBlog)
                each helpblog in layout.listOfHelpBlog
                  if helpblog.name == article.blog         
                    option(value="#{helpblog.name}" selected) #{helpblog.name}
                    - displayed = true;
                  else
                     option(value="#{helpblog.name}" ) #{helpblog.name}
              if (!displayed)
                option(value="#{article.blog}" selected) #{article.blog}
              
          .col-md-5
            .hidden
              textarea.form-control(name="version",rows=1,hide=true) #{article.version}
             p(id="categoryDisplay" style={color:'Gray'})

          .col-md-1
            button.btn.btn-large.btn-primary(type = "button" onclick ="window.onbeforeunload=null; document.getElementById('input').submit();") OK
            button.btn.btn-large.btn-default(type = "button" onclick ="window.onbeforeunload=null; location.href='#{layout.htmlroot}/article/#{article.id}?edit=false&style=#{params.style}';") Cancel


        .row
          .col-md-1
            |Category <br>
          +leftcolumn
            select(id="categoryEN",name="categoryEN").form-control
              for category in categories
                - option = category[params.left_lang]
                - if (params.right_lang != "--") option += " / "+category[params.right_lang]
                if (category.EN == article.categoryEN)
                  option(value="#{category.EN}" selected ) #{option} 
                else
                  option(value="#{category.EN}" ) #{option} 
          +rightcolumn
            h2
              |#{article.getCategory(params.right_lang)}

        .row
          .col-md-1
            |Title <br>
          .col-md-7
            textarea.form-control(name="title",rows=1) #{article.title}
          .col-md-3
            each lang in layout.languages
              if (article["markdown"+lang])
                if (article["markdown"+lang]!=="no translation") 
                  span.label.label-success
                    |#{lang}
                else    
                  span.label.label-danger
                    |#{lang}
              else
                span.label.label-default
                  |#{lang}
               
        .row
          .col-md-1
            |Collection <br>
          .col-md-10
            textarea.form-control(id="collection" name="collection" rows=2) #{article.collection}
        .row
          .col-md-1
            
          .col-md-6
              .div(id="linkArea")
          .col-md-4
            p Drag me to a markdown field, or paste an URL into selected text to create an markdown link.
                
        .row 
          .col-md-1
          - var lbg;
          - if (params.left_lang===layout.language) lbg = "osmbc-lang";
          - if (params.left_lang===layout.language2) lbg = "osmbc-lang2";
          - var rbg;
          - if (params.right_lang===layout.language) rbg = "osmbc-lang";
          - if (params.right_lang===layout.language2) rbg = "osmbc-lang2";

          +leftcolumn
            span.label.label-default(id="left_lang" class="#{lbg}") 
              |#{params.left_lang}
          +rightcolumn
            span.label.label-default(id="right_lang" class="#{rbg}" )
              |#{params.right_lang}
        .row
          .col-md-1
            |Markdown 
          +leftcolumn
            if blog && !blog.isEditable(params.left_lang)
              .panel.panel-default
                .panel-body #{article["markdown"+params.left_lang]}         
            else
              if placeholder.markdown[params.left_lang]
                - p = placeholder.markdown[params.left_lang];
              else 
                - p = "";
              textarea.form-control(id="markdownLEFT" placeholder = "#{p}" spellcheck = "true" lang="#{params.left_lang}" name = "markdown#{params.left_lang}" rows = 6) #{article["markdown"+params.left_lang]}
              div(id="text_left")
                |'no translation' or '-' to specify no translation wanted.
 
          +rightcolumn
            if blog && !blog.isEditable(params.right_lang)
              .panel.panel-default
                .panel-body #{article["markdown"+params.right_lang]}         
            else
              if (placeholder.markdown[params.right_lang])
                - p = placeholder.markdown[params.right_lang];
              else 
                - p = "";
              textarea.form-control(id="markdownRIGHT" placeholder = "#{p}" lang="#{params.right_lang}" spellcheck = "true"  name = "markdown#{params.right_lang}" rows=6) #{article["markdown"+params.right_lang]}
              div(id="text_right")
                |'no translation' or '-' to specify no translation wanted.
          .col-md-1

            if ((params.left_lang=="DE") || (params.right_lang=="DE"))
              - for (lang in languageFlags)
                img(id="#{lang}",src="#{languageFlags[lang]}", class="img-thumbnail" ,width = 40, onclick="javascript:myclick(this.id)")
          

        .row
          if article.categoryEN != "Picture"
            .col-md-1
              |Preview
            +leftcolumn
              .panel.panel-default.panel-body(id="previewLEFT")
                  :verbatim
                    !{article["textHtml"+params.left_lang]}
            +rightcolumn
              .panel.panel-default
                .panel-body(id="previewRIGHT")
                  :verbatim
                    !{article["textHtml"+params.right_lang]}
        .row
          .col-md-1
            |Comment <br>
          .col-md-11
            :verbatim
            <pre>!{article.comment} </pre>
        .row
          .col-md-1
          .col-md-5
            if (article.comment && article.comment!="")
              select(id="commentStatus",name="commentStatus").form-control
                each status in ["open","solved"]
                  if article.commentStatus
                    if status == article.commentStatus
                      option(value="#{status}" selected ) #{status}
                    else
                      option(value="#{status}"  ) #{status}
                  else
                      option(value="#{status}"  ) #{status}

          
    else
     .row
        .col-md-1
          |Blog <br>
        +leftcolumn
          h2
            |#{article.blog}
        +rightcolumn
          h2
        .col-md-1
          a(href="#{layout.htmlroot}/article/#{article.id}?edit=true&style=#{params.style}" class="btn btn-primary" role="button") Edit
      .row
        .col-md-1
          |Category <br>
        +leftcolumn
          h4
            |#{article.getCategory(params.left_lang)}
        +rightcolumn
          h4
            |#{article.getCategory(params.right_lang)}
      .row
        .col-md-1
          |Title <br>
        .col-md-7
          h3
            |#{article.title}
        .col-md-3
          each lang in layout.languages
            if (article["markdown"+lang])
              if (article["markdown"+lang]!=="no translation") 
                span.label.label-success
                  |#{lang}
              else    
                span.label.label-danger
                  |#{lang}
            else
              span.label.label-default
                |#{lang}

      .row
        .col-md-1
          |Collection <br>
        .col-md-10
          if (article.collection)
            :verbatim
            |<pre>!{article.collection.replace(/(https?:\/\/[^\[\] \n\r]*)/gi, '<a href="$1" target="_blank">$1</a>')} </pre>
      .row 
        .col-md-1
        - var lbg;
        - if (params.left_lang===layout.language) lbg = "osmbc-lang";
        - if (params.left_lang===layout.language2) lbg = "osmbc-lang2";
        - var rbg;
        - if (params.right_lang===layout.language) rbg = "osmbc-lang";
        - if (params.right_lang===layout.language2) rbg = "osmbc-lang2";

        +leftcolumn
          span.label.label-default(id="left_lang" class="#{lbg}") 
            |#{params.left_lang}
        +rightcolumn
          span.label.label-default(id="right_lang" class="#{rbg}" )
            |#{params.right_lang}
  
      if (false)
        .row
          .col-md-1
              |Markdown<br>
          +leftcolumn 
              .panel.panel-default
                .panel-body #{article["markdown"+params.left_lang]}
          +rightcolumn
              .panel.panel-default
                .panel-body #{article["markdown"+params.right_lang]}
      .row
        if article.categoryEN != "Picture"
          .col-md-1
            |Preview

          +leftcolumn 
            .panel.panel-default
              .panel-body(id="previewLEFT")
                  :verbatim
                    !{article["textHtml"+params.left_lang]}
          +rightcolumn 
            .panel.panel-default
              .panel-body(id="previewRIGHT")
                  :verbatim
                    !{article["textHtml"+params.right_lang]}


  .row
    if (article.commentList)
      h3="Comments ("+article.commentStatus+")"
      each comment,i in article.commentList
        .row
          .col-md-12
            b=comment.user
            span=" "
            span.text-muted.small=layout.moment(comment.timestamp).fromNow()
            if (comment.editstamp)
              span=" "
              i.text-muted.small="edit: " + layout.moment(comment.editstamp).fromNow()
            if layout.user.OSMUser === comment.user && params.editComment != i
              a(href="#{layout.htmlroot}/article/#{article.id}?editComment=#{i}")
                span=" "
                span.glyphicon.glyphicon-pencil

            if params.editComment == i && layout.user.OSMUser === comment.user
              form(name="EditComment",id="EditComment", action="#{layout.htmlroot}/article/#{article.id}/EditComment/#{i}", method="post")
                textarea.form-control(name="comment" id="editComment" rows=7)=comment.text
                button.btn.btn-large.btn-primary(type = "button" onclick ="window.onbeforeunload=null; document.getElementById('EditComment').submit();") Update
                button.btn.btn-large.btn-default(type = "button" onclick ="window.onbeforeunload=null; location.href='#{layout.htmlroot}/article/#{article.id}?style=#{params.style}';") Cancel
            else
              p=comment.text
    .row
      .col-md-12
        if (!params.editComment)
          form(name="AddComment",id="AddComment", action="#{layout.htmlroot}/article/#{article.id}/addComment", method="post")
            textarea.form-control(name="comment" id="comment" rows=7)
            button.btn.btn-large.btn-primary(type = "button" onclick ="window.onbeforeunload=null; document.getElementById('AddComment').submit();") Add Comment
            button.btn.btn-large.btn-default(type = "button" onclick ="window.onbeforeunload=null; location.href='#{layout.htmlroot}/article/#{article.id}?style=#{params.style}';") Cancel
            span.small.text-muted Use #solved and #open in text to solve or reopen a comment.

  .row
      if articleReferences.count >= 1
        h3
          |Links used in other Post
        div
          table.table.table-striped.table-responsive
            thead
              tr
                th
                  |link
                th
                  |article
                th
                  |Blog
            tbody
              each array,link in articleReferences
                if (link != "count" )
                  each articleItem,index in array
                    if (articleItem.id != article.id) && (index <5)
                      tr
                        td
                          a(href='#{link}') #{link}
                        td
                          a(href='#{layout.htmlroot}/article/'+articleItem.id) #{articleItem.displayTitle()}
                        td= articleItem.blog
                    if (index == 8) 
                      tr
                        td
                          a(href='#{link}') #{link}
                        td
                          |Und #{array.length-5} weitere Artikel.
                



    .row.hidden-xs
      if changes
        h3
          |History
        div
          table.table.table-striped.table-responsive
            thead
              tr 
                th
                 | 
                th
                 |user
                th
                 |what
                th
                 |change
                th
                 |when
             tbody
              each change, i in changes
                tr
                  td
                   a(href='#{layout.htmlroot}/changes/' + change.id) 
                      span.glyphicon.glyphicon-info-sign 
                  td= change.user
                  td= change.property
                  td
                    :verbatim
                    !{change.htmlDiffText(100)}
                  td= layout.moment(change.timestamp).fromNow() 
        div
          p
            |only displaying changes 
            span.osmbc-inserted
              |inserted text 
            span.osmbc-deleted
              |removed text

 
block scripts                
  script(src='https://cdn.jsdelivr.net/markdown-it/5.0.1/markdown-it.min.js')
  script(src="https://cdn.rawgit.com/Triforcey/clip-j/1dbfdfc0646359ee70d714549db947d02705b303/clip-j.js" )

  script.
    window.onload = init;

    if ('#{params.edit}'=='true'  && !("#{(blog)?blog.status:"open"}"=="closed")) {
        window.onbeforeunload = function(event) {
          event.returnValue = "Please use Cancel or OK to remove lock information.";
      };

    }
    

    function init() {
   
      markdownLEFT = document.getElementById("markdownLEFT");
      if (markdownLEFT) {
        markdownLEFT.onchange = onleaveLEFT;
        markdownLEFT.onkeyup = onchangeLEFT;
        markdownLEFT.onpaste = pasteLEFT;
        markdownLEFT.ondrop = pasteLEFT;
        markdownLEFT.onleave = onleaveLEFT;
        onchangeLEFT();
     }
      markdownRIGHT = document.getElementById("markdownRIGHT");
      if (markdownRIGHT) {
        markdownRIGHT.onchange = onleaveRIGHT;
        markdownRIGHT.onkeyup = onchangeRIGHT;
        markdownRIGHT.onpaste = pasteRIGHT;
        markdownRIGHT.ondrop = pasteRIGHT;
        markdownRIGHT.onleave = onleaveRIGHT;
        onchangeRIGHT();
     }
      if (document.getElementById("text_left")) {
         noTranslationText = document.getElementById("text_left").innerHTML;  
        } else if (document.getElementById("text_right")) {
         noTranslationText = document.getElementById("text_right").innerHTML;  
        }
      
     
      coll = document.getElementById("collection");
      if (coll) {
        coll.onchange = onchangeCollection;
        coll.onkeyup = onchangeCollection;

        }
      onchangeCollection();

      comm = document.getElementById("comment");
      if (comm) {
        comm.onchange = onchangeComment;
        comm.onkeyup = onchangeComment;
        onchangeComment();
      }

      categoryDisplay = document.getElementById("categoryDisplay");
      categoryEN = document.getElementById("categoryEN");
      if (categoryEN) {
        categoryEN.onchange = onchangeCategory;
        onchangeCategory();
       
        }
 
      addComment = document.getElementById("AddComment");
      if (addComment) {
        f = onChangeField("AddComment");
        addComment.onchange=f;
        addComment.onkeyup = f;
        f();
      }
      editComment = document.getElementById("EditComment");
      if (editComment) {
        f = onChangeField("EditComment");
        editComment.onchange = f;
        editComment.onkeyup = f;
        f();
      }
    }

    function onleaveLEFT() {
      var mdEN = document.getElementById("markdownLEFT").value;
      if (mdEN.trim() == "-") {
        document.getElementById("markdownLEFT").value = "no translation";
        onchangeLEFT();
      }
    }
    function onleaveRIGHT() {
      var mdEN = document.getElementById("markdownRIGHT").value;
      if (mdEN.trim() == "-") {
        document.getElementById("markdownRIGHT").value = "no translation";
        onchangeRIGHT();
        }
    }
   
    function convert(text) {
      converter = new window.markdownit({breaks:true});

      // generate the OSMBlog Style List
      if (text.substring(0,2)=="* ") text = text.substring(2,999999);
      // convert md to html
      text = converter.render(text);
      // skip <ul> and </ul> at start and end
      

      text = '<ul><li>'+text+'</li></ul>';

      if (document.getElementById("categoryEN").value=="Picture") {
         text = '<ul><li>Live Preview not supported here</li></ul>';

        
        }
      
      return text;

    }
    function isURL(t) {
    
      var isUrlRegex = /^(http|ftp|https):\/\/[\w-]+(\.[\w-]+)+([\w.,@?^=%&amp;:\/~+#-]*[\w@?^=%&amp;\/~+#-])?/


      if (t) return isUrlRegex.test(t);
      return isUrlRegex;
    }
    
  

       function generateMarkdownLink2(par1,par2) {
        var before = par1.text;
        var after = par2.text;
        var tb = '';

        tb = par1.text.substring(0,par1.startselection);
        ta = par1.text.substring(par1.endselection,99999);
        beforeSnip = par1.text.substring(par1.startselection,par1.endselection);
        afterSnip = par2.text.substring(par1.startselection,par2.endselection);
    
     
      
 
        if (isURL(afterSnip.trim())) {
          afterSnip = afterSnip.trim();
       
          var allreadyMarkdowned = false;
          if (tb!="" && tb.charAt(tb.length-1)=="(") allreadyMarkdowned= true;
          if (ta!="" && tb.charAt(0)==")") allreadyMarkdowned= true;
          if (!allreadyMarkdowned) {
            var r = tb+"["+beforeSnip+"]("+afterSnip+")"+ta;
            var c ;
            if (beforeSnip == "") {
              c = (tb+"[").length;
            } else {
              c = (tb+"["+beforeSnip+"]("+afterSnip+")").length;
            }

            return {text:r,pos:c};
          }
        }
        return null;
    }
    
    function pasteLEFT() {
     
      
      var mf = document.getElementById("markdownLEFT");
       //var textBefore = mf.value;
      var before = {text:mf.value,startselection:mf.selectionStart,endselection:mf.selectionEnd};
     
      setTimeout(function(){
        //var textAfter = mf.value;
        var after = {text:mf.value,startselection:mf.selectionStart,endselection:mf.selectionEnd};
        //var r = generateMarkdownLink(textBefore,textAfter);
        var r = generateMarkdownLink2(before,after);
        if (r) {
          mf.value =r.text;
          mf.selectionStart = mf.selectionEnd = r.pos;

          onchangeLEFT();
        }
      },1);

    }
    function pasteRIGHT() {
     
     
      var mf = document.getElementById("markdownRIGHT");
      //var textBefore = mf.value;
      var before = {text:mf.value,startselection:mf.selectionStart,endselection:mf.selectionEnd};

      
      setTimeout(function(){
        //var textAfter = mf.value;
        var after = {text:mf.value,startselection:mf.selectionStart,endselection:mf.selectionEnd};
        //var r = generateMarkdownLink(textBefore,textAfter);
        var r = generateMarkdownLink2(before,after);
        if (r) {
          mf.value =r.text;
          mf.selectionStart = mf.selectionEnd = r.pos;
         onchangeRIGHT();
        }
      },1);

    }

    function checkForTable(field) {
      var md = document.getElementById(field).value;
      var cl = document.getElementById("collection");

      var f = document.getElementById(field);
      if (!cl) cl = f;
      if (!f) return;
      if (md.indexOf("|----")>= 0) {
        f.wrap = 'off';
        f.style.fontFamily="monospace"
        }
      else {
        f.wrap = 'soft';
        f.style.fontFamily = cl.style.fontFamily;

        }
    }

    
    function onchangeLEFT() {
      var md = document.getElementById("markdownLEFT").value;
      previewLEFT = document.getElementById("previewLEFT");
      textLeft = document.getElementById("text_left");


      checkForTable("markdownLEFT");
      FitToContent("markdownLEFT");
      
      previewLEFT.innerHTML = convert(md);
      var longLink = md.search(/\[[^\]]{40,}\]/g);
      if (longLink>=0) {
        //previewLEFT.style.backgroundColor="#FDC6CD";
        textLeft.innerHTML = "Please shorten ["+md.substring(longLink+1,longLink+40)+"...]"
        textLeft.style.backgroundColor ="#FDC6CD";


        }
      else {
         //previewLEFT.style.backgroundColor="";
         textLeft.style.backgroundColor ="";
         textLeft.innerHTML = noTranslationText;
        }
      }
      function onchangeRIGHT() {
        //console.log("onchangeRight");
        var mdEN = document.getElementById("markdownRIGHT").value;
        previewRIGHT = document.getElementById("previewRIGHT");
        textRight = document.getElementById("text_right");
        textLeft = document.getElementById("text_left");
        //console.log("beforeFit");
        checkForTable("markdownRIGHT");
        FitToContent("markdownRIGHT");
        //console.log("AfterFit");
        previewRIGHT.innerHTML = convert(mdEN);
        var longLink = mdEN.search(/\[[^\]]{40,}\]/g);
        if (longLink>=0) {
          textRight.innerHTML = "Please shorten ["+mdEN.substring(longLink+1,longLink+40)+"...]"
          textRight.style.backgroundColor ="#FDC6CD";
          //previewRIGHT.style.backgroundColor="#FDC6CD";
          
        }
        else {
           textRight.style.backgroundColor ="";
           textRight.innerHTML = noTranslationText;
           //previewRIGHT.style.backgroundColor="";
           
         }
      }
      function generateGoogleTranslateLink(link,lang) {
        return '<a href="https://translate.google.de/translate?sl=auto&tl='+lang+'&u='+link+'" target="_blank">'+lang+'</a>';
      }
      function onchangeCollection() {
        var clfield = document.getElementById("collection");
        var cl;
        if (clfield) cl = clfield.value;
        var linkArea = document.getElementById("linkArea");

       // regexToken = /(((ftp|https?):\/\/)[\-\w@:%​​_\+.~#?!,&\/\/=]+)|((mailto:)?[_​​.\w-]+@([\w][\w\-]+\.)+[a-zA-Z]{2,3})/g;
        regexToken = /(https?:\/\/[^\[\] \n\r]*)/g
        var linkList;
       
        var result = "";

        while( (linkList = regexToken.exec(cl)) != null ) {
            //console.log("linkList"+JSON.stringify(linkList));
         
            result += '<a href="'+linkList[0]+'" target="_blank">'+linkList[0]+'</a>\n';
            leftLang=document.getElementById("left_lang").innerHTML;
            rightLang=document.getElementById("right_lang").innerHTML;
            result += " "+generateGoogleTranslateLink(linkList[0],leftLang);
            if (rightLang != "--") {
              result += " "+generateGoogleTranslateLink(linkList[0],rightLang);
            }
            result +="<br>\n";
       
            //console.log(result);
        }
        result = '<p>'+result+'</p>';
        FitToContent("collection");
 
        //console.log(result);
        if (linkArea) linkArea.innerHTML = result;
      }


      var myclick = function (id) {
        image = document.getElementById(id);
        src = image.src;
        src = "![("+id+")]("+src+")";
        clip(src);
        alert(id+ " flag is copied to clipboard");
      }
      function onchangeComment() {
        FitToContent("comment");
      }
      function onChangeField(field) {
        return function () {
          FitToContent(field);
        }
      }

      function FitToContent(id, maxHeight)
      {
         textfield = document.getElementById(id);
         if ( !textfield )
            return;


         textfield.style.height = textfield.style.minHeight;
         var adjustedHeight = textfield.clientHeight;
         

         if ( !maxHeight || maxHeight > adjustedHeight )
         {
            adjustedHeight = Math.max(textfield.scrollHeight, adjustedHeight);
            if ( maxHeight )
               adjustedHeight = Math.min(maxHeight, adjustedHeight);
          
            if ( adjustedHeight > textfield.clientHeight ) {
              
               textfield.style.height = adjustedHeight + "px";
               

              }
         }
      }



      var placeholder = !{JSON.stringify(placeholder.categories)}


    

      function onchangeCategory() {
        var c = categoryEN.value;
        if (placeholder[c]) {
           categoryDisplay.innerHTML = placeholder[c];    
          }
      }



   


